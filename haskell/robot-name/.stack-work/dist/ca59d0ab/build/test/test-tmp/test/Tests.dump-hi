
==================== FINAL INTERFACE ====================
2017-09-02 22:43:57.0597077 UTC

interface main@main:Main 8002
  interface hash: a281769cea97030986a99e04de4960e5
  ABI hash: 442d9139346a565db03932c0e098e307
  export-list hash: 96fecf9dee3f55aee4d73b8235f9911d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 67c41e2737fe192cc50230070f9912d7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      Win32-2.3.1.1@Win32-2.3.1.1
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-CdiTOvx5ZEQ2RerUYIP05k
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-m1TEyTenyr5nJN40TpHVj
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.3@hspec-2.4.3-20cKjkUYJOdA522cWVW1t8
                      hspec-core-2.4.3@hspec-core-2.4.3-9byXex5ztxKDIU9sqHz2ox
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      robot-name-0.1.0.2@robot-name-0.1.0.2-4oqFRvTljHy1YDQXO2hcG9
                      setenv-0.1.1.3@setenv-0.1.1.3-7zMwpxt4EEAPEd1ZS7C4A
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.3@hspec-core-2.4.3-9byXex5ztxKDIU9sqHz2ox:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Ix f13179c4040c1cd8209fb21595dbecfb
import  -/  base-4.9.1.0:GHC.Arr 242938743c4804e9f582a7850200c98b
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.3@hspec-2.4.3-20cKjkUYJOdA522cWVW1t8:Test.Hspec eb588c8c9f424e542b2a5d2e0014202f
import  -/  hspec-2.4.3@hspec-2.4.3-20cKjkUYJOdA522cWVW1t8:Test.Hspec.Runner f9eac90a5fa60ee96dd02572070aa8fb
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-9byXex5ztxKDIU9sqHz2ox:Test.Hspec.Core.Options 56439961f06d2a6d8516e9c2a894e3df
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-9byXex5ztxKDIU9sqHz2ox:Test.Hspec.Core.Runner c61f1a99cfcca36907d43efc3abee2ce
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-9byXex5ztxKDIU9sqHz2ox:Test.Hspec.Core.Spec 4e0b94d6eef84316e3e33c87397dc532
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-9byXex5ztxKDIU9sqHz2ox:Test.Hspec.Core.Spec.Monad a195541337f96198092f84c94b3dcc80
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 3a84a1cb640da0a9a923fc2bfa92c798
import  -/  robot-name-0.1.0.2@robot-name-0.1.0.2-4oqFRvTljHy1YDQXO2hcG9:Robot eacde09f29fa2366be4721ed0472e838
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
ea452d52e61a3af0bed2e852c5308173
  $wtestPersistence ::
    GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        ww
                        w of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        ww
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        ww
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case (Main.main99 (GHC.Types.[] @ GHC.Types.Char) ipv3 ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (Main.main91 (GHC.Types.[] @ GHC.Types.Char) ipv5 ipv1)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv6 } } } }) -}
f7314dcecdec38d42f75f2b483f66050
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
34154e063ff1c3cbe32d477b04ad1b72
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main184
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
564d7392bacbfa269b99214c9267b181
  main10 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main11
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
5ea7f492cc2522ba5b1e1c47665c44fa
  main100 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main101) -}
7f09e313fee2cf0a9390f9ebd4a26e2c
  main101 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main102) -}
5c9c796bda9de3c4db62aa892783beba
  main102 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main50
                   Main.main103
                   GHC.Stack.Types.EmptyCallStack) -}
da397115c893725870cb1b4266343bda
  main103 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main104
                   Main.main97
                   Main.main104
                   Main.main96) -}
39c9c9be05ea7fc5dfa736e158bea4b8
  main104 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 29#) -}
06620014a02efedd5f817ca1fa5dc4fd
  main105 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main106
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
3911b6a655b6c27ffd622eb4398f9ccb
  main106 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main107) -}
66311197aa67649b7205c52eeb406795
  main107 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main108) -}
aedeff38922f527323da938f23ad7d01
  main108 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main109) -}
171ef82ba05d2cb48e78ecbfcbd7f923
  main109 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main110) -}
1aa31ffd66b4d0af8e3ffcc538a1d84b
  main11 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main12) -}
6f0879ea29945675a12c410b332059dc
  main110 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main111
                   GHC.Stack.Types.EmptyCallStack) -}
d7b2565295e9c21e5fb8eb0b3dd3356c
  main111 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main113
                   Main.main59
                   Main.main113
                   Main.main112) -}
16abf5260db2527859ef10b567d28ddb
  main112 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
349f44d50f766e98c4ad1ec0afad72f8
  main113 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48#) -}
50852020261e1ff7d6ed730fdf5be160
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main85
                   Main.main115) -}
06482b6cedf9a8649ed41db3fd99085e
  main115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ew name is persistent"#) -}
1f18768a51fc49c53a512954e59f0b2d
  main116 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main117
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
910d941013a54d06473ac6a3e84370f4
  main117 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main118) -}
fabcb0da6ade45049b83bdf37b42187e
  main118 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main131
                   Main.main122
                   GHC.Types.False
                   Main.main119
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
8d5f6b45c9821d87f07cd0d97572015d
  main119 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main120 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
9281e99d686a030365482fc822afa182
  main12 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main62
                   Main.main51
                   GHC.Types.False
                   Main.main13
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
c1b8f2eb5d960c6e8a4558dd6bbc44e3
  main120 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Robot.Robot ww1 ->
                 case ww1
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of ww2 { GHC.STRef.STRef ww3 ->
                 case Robot.$wresetName ww3 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        ww3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 Test.Hspec.Expectations.shouldContain13
                   Main.main121
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   (GHC.CString.unpackAppendCString#
                      "predicate failed on: "#
                      (GHC.Show.$fShow[]_$s$cshow1 ipv5))
                   (Main.main_matchesPattern ipv5)
                   ipv4 } } } } }) -}
65ccb1b57d4d3b5469e7a27c5aaf68c1
  main121 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldSatisfy2
                   GHC.Stack.Types.EmptyCallStack) -}
dc0a2efefa14ed6d9ea842a1e32883d2
  main122 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main123
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
b561a6a8715eb10c8e6d1670084650fc
  main123 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main124) -}
0e7c255f389bf67cb37558db97038809
  main124 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main125) -}
403e7b3918bbf8ee2cbb47de1d408a87
  main125 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main126) -}
59109865c31d2744b2be71606fa23a53
  main126 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main127) -}
5e8b33bb855d76873300311b4c828867
  main127 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main128
                   GHC.Stack.Types.EmptyCallStack) -}
8da99f872f810c0ae16abe8804dbed82
  main128 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main130
                   Main.main59
                   Main.main130
                   Main.main129) -}
81d25bd0323c5f13f006a79567282173
  main129 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
f284e29755e521e7c22a2ed76f005599
  main13 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main14 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a7ecacce7802d697f1c574f7a16b3ce9
  main130 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43#) -}
6a0f5276ca0b091881e736b409e3e0bc
  main131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main85
                   Main.main132) -}
5a995ae08625b44dc21fda40aa9e0932
  main132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ew name should match expected pattern"#) -}
5aaba0188ea82929e9e1869776a3c5d7
  main133 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main134
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
a035578cbd96804fc5a5e0256b6ef68d
  main134 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main135) -}
7b276f6df1d2942bfda2174199d79bf9
  main135 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main150
                   Main.main142
                   GHC.Types.False
                   Main.main136
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a4219b198ffb4063bc771273a551925f
  main136 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main137 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e8db4eb59eb60589ea6879798db0cd9d
  main137 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Robot.Robot ds ->
                 case ds
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Robot.mkRobot1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 { Robot.Robot ds4 ->
                 case ds4
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of wild3 { GHC.STRef.STRef var#1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#1
                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                 let {
                   arg :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "not expected: "#
                       (GHC.Show.$fShow[]_$s$cshow1 ipv3)
                 } in
                 case GHC.Classes.$fEq[]_$s$c==1 ipv3 ipv7 of wild4 {
                   GHC.Types.False
                   -> Test.Hspec.Expectations.shouldContain13
                        Main.main138
                          `cast`
                        (Sym (GHC.Classes.N:IP[0]
                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                        arg
                        GHC.Types.True
                        ipv6
                   GHC.Types.True
                   -> Test.Hspec.Expectations.shouldContain13
                        Main.main138
                          `cast`
                        (Sym (GHC.Classes.N:IP[0]
                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                        arg
                        GHC.Types.False
                        ipv6 } } } } } } } } }) -}
fcf3f865baea5aa6790eed73eeaa74ed
  main138 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldNotBe2
                   Main.main139) -}
cc7e85e2059b7c1a58775f918da7c364
  main139 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main140
                   GHC.Stack.Types.EmptyCallStack) -}
359d623a33d1bff739a81b3c6d8aac95
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 case Robot.mkRobot1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Robot.Robot ds ->
                 case ds
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv3 of wild2 { Robot.Robot ds4 ->
                 case ds4
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of wild3 { GHC.STRef.STRef var#1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#1
                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                 case GHC.Classes.$fEq[]_$s$c==1 ipv5 ipv7 of wild4 {
                   GHC.Types.False
                   -> case Robot.$wresetName var# ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Base.String
                             var#
                             ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Base.String
                             var#1
                             ipv10 of ds8 { (#,#) ipv12 ipv13 ->
                      case GHC.Classes.$fEq[]_$s$c==1 ipv11 ipv13 of wild5 {
                        GHC.Types.False
                        -> (Main.main44 (GHC.Types.[] @ GHC.Types.Char) ipv13 ipv7)
                             `cast`
                           (GHC.Types.N:IO[0] <()>_R)
                             ipv12
                        GHC.Types.True
                        -> let {
                             eta :: GHC.Base.String
                             = GHC.CString.unpackAppendCString#
                                 "not expected: "#
                                 (GHC.Show.$fShow[]_$s$cshow1 ipv11)
                           } in
                           case Control.DeepSeq.$fNFDataArray_$crnf1
                                  @ GHC.Types.Char
                                  Control.DeepSeq.$fNFDataChar_$crnf
                                    `cast`
                                  (Sym (Control.DeepSeq.N:NFData[0] <GHC.Types.Char>_N))
                                  eta of wild6 { () ->
                           GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ ()
                             (Test.HUnit.Lang.$fExceptionHUnitFailure_$ctoException
                                (Test.HUnit.Lang.HUnitFailure
                                   Main.main32
                                   (Test.HUnit.Lang.Reason eta)))
                             ipv12 } } } } }
                   GHC.Types.True
                   -> let {
                        eta :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            "not expected: "#
                            (GHC.Show.$fShow[]_$s$cshow1 ipv5)
                      } in
                      case Control.DeepSeq.$fNFDataArray_$crnf1
                             @ GHC.Types.Char
                             Control.DeepSeq.$fNFDataChar_$crnf
                               `cast`
                             (Sym (Control.DeepSeq.N:NFData[0] <GHC.Types.Char>_N))
                             eta of wild5 { () ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        (Test.HUnit.Lang.$fExceptionHUnitFailure_$ctoException
                           (Test.HUnit.Lang.HUnitFailure
                              Main.main15
                              (Test.HUnit.Lang.Reason eta)))
                        ipv6 } } } } } } } } } }) -}
81eacf1aa0fccb374e865afd1f6e2984
  main140 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main141
                   Main.main26
                   Main.main141
                   Main.main25) -}
32810cde44e1913b05bc926a1268134f
  main141 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 41#) -}
7a3ce58478fa1bee3958167830f42a79
  main142 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main143
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
4bd72f35da6d5e1513dfdf4f8cd6173c
  main143 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main144) -}
d67f1040fbbb637b401504f7bac63b56
  main144 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main145) -}
69c39a6b6997739b6307ad71cd4c59c0
  main145 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main146) -}
e111f5e0e026300894cce3208ce631cd
  main146 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main147) -}
a45a5be91215dfff9431e7bfcd40439d
  main147 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main148
                   GHC.Stack.Types.EmptyCallStack) -}
e01455f42e9f2a070087d86ca91654cf
  main148 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main112
                   Main.main59
                   Main.main112
                   Main.main149) -}
00cd1c61c8801c8998ad434f00d701a6
  main149 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53#) -}
8227a5d56ad5501f37ed1f577d5d4f5b
  main15 :: GHC.Base.Maybe GHC.Stack.Types.SrcLoc
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main16
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild3 {
                   [] -> GHC.Base.Nothing @ GHC.Stack.Types.SrcLoc
                   : ds ds1
                   -> case ds of wild4 { (,) ds2 loc ->
                      GHC.Base.Just @ GHC.Stack.Types.SrcLoc loc } }) -}
25bef0cdd881f8d18d965376313503ae
  main150 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main152
                   Main.main151) -}
483c546a8155a246df0352e15afceee4
  main151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ifferent robots have different names"#) -}
fed1f888a3c9f358570033accaf97a99
  main152 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd'#) -}
c87cc6fac01905603a3dd76c713d56d0
  main153 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main154
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
1fab97a6273c84a1f9a8f37a17c65e59
  main154 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main155) -}
cf9a8af91e650061d1db2f76db157418
  main155 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main167
                   Main.main159
                   GHC.Types.False
                   Main.main156
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
3fbfd7de773eb66646c19d20647bcb0a
  main156 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main157 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
4e240a372b3867b92d5a54a68843ad8d
  main157 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 Main.main158 ipv1 ipv }) -}
b7a7cd12abbdce98751fb1a23f98091a
  main158 ::
    Robot.Robot
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S(S(S)),1*U(1*U(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Robot.Robot)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Robot.Robot ww1 ->
                 case ww1
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of ww2 { GHC.STRef.STRef ww3 ->
                 Main.$wtestPersistence ww3 w1 } }) -}
3ea03329cf29be04193b248acedfb48d
  main159 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main160
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
e34fa5b83590109cfba9080f8e81c41a
  main16 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main17) -}
4aede7badd6d4b6126616dfa989a04ee
  main160 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main161) -}
fe15ea1342fe7437e8a0de218d485e40
  main161 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main162) -}
39186a3544b87bbd975aff4b6baa7f31
  main162 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main163) -}
172a9a80c60884ca40c69ac80b53f5bf
  main163 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main164) -}
6512be0a3011b03fdbcd5e8be915efeb
  main164 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main165
                   GHC.Stack.Types.EmptyCallStack) -}
908dfd843371ca5fe4def6aa7ed98e89
  main165 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main166
                   Main.main59
                   Main.main166
                   Main.main42) -}
b81bcf35a593cef9624e0a0eebe4efdc
  main166 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 35#) -}
dc99883b1afb7c278dbd09d3efbb0b56
  main167 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main85
                   Main.main168) -}
a94d9c438424c7d6c6bd890a8afcf820
  main168 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ame is persistent"#) -}
ef770d9e18b1942e9c6f3739660ce7b0
  main169 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main170
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
d9ccc1ee9e0eab7e9b19590aa7f04f36
  main17 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main18) -}
0467a2434a35f7b75442be609f994c68
  main170 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main171) -}
30a488e7b3b2076ae78fa62ad6bae906
  main171 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main182
                   Main.main174
                   GHC.Types.False
                   Main.main172
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
d02527e775f6696febf1e0fdc7b063ba
  main172 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main173 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
d9e89f469be8c72a0c25a61774c5ba48
  main173 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Robot.Robot ds ->
                 case ds
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 Test.Hspec.Expectations.shouldContain13
                   Main.main121
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   (GHC.CString.unpackAppendCString#
                      "predicate failed on: "#
                      (GHC.Show.$fShow[]_$s$cshow1 ipv3))
                   (Main.main_matchesPattern ipv3)
                   ipv2 } } } }) -}
649fbc6d8c2eea59485418bca039e4dc
  main174 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main175
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
64db3932cc13cb428fc608f204a5e8f0
  main175 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main176) -}
da2d0e6779ae417bce5e0a162996b107
  main176 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main177) -}
7a5dc03c9c422ce251b11f245301542a
  main177 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main178) -}
694eba556b38e8f03e624748dce5c72e
  main178 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main179) -}
f953e9faa85e920286e235ca39e0dfc9
  main179 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main180
                   GHC.Stack.Types.EmptyCallStack) -}
213bc896be8d024c988c0488c2522778
  main18 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Lang.assertEqual8
                   Test.HUnit.Lang.assertEqual1
                   Main.main19) -}
2fc74ba07bd5ea8219f2373cc8af1e21
  main180 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main25
                   Main.main59
                   Main.main25
                   Main.main181) -}
854fcd4f8a2f0259e7e9b7b9b20765b1
  main181 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50#) -}
c4b41b40f9ea99f4b0df000c85432509
  main182 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main85
                   Main.main183) -}
7d30b9d2fa50a8a1ea8ed9f214dce40a
  main183 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ame should match expected pattern"#) -}
1432aabb5891f783d261a24f1f081dfe
  main184 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
f6f7f3ed17e9a69b1c5dde6e64976b4c
  main185 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
6470dd90e080a958b6737a27ab87cf95
  main19 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Lang.assertEqual13
                   Test.HUnit.Lang.assertFailure1
                   Main.main20) -}
2339c62f0accd1a732c8bb37cd69de0f
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main3 #)) -}
43b1c4963d486038dafc6c88828d5106
  main20 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.expectationFailure8
                   Test.Hspec.Expectations.expectationFailure1
                   Main.main21) -}
54c8b82e8ec7ec7ab925d9c2a38a8588
  main21 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain16
                   Test.Hspec.Expectations.shouldContain14
                   Main.main22) -}
cbbe52abcbc67d8c3a1d8347eb73c0a1
  main22 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldNotBe2
                   Main.main23) -}
4e4a12504fd4922acac3ad52235c5f06
  main23 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main24
                   GHC.Stack.Types.EmptyCallStack) -}
14798f9c28685bf556b8afa2da8456dd
  main24 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main27
                   Main.main25) -}
d4c46ea86105c866379f0ea1a441f57d
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 32#) -}
f3f30ea2eae87a627dc8d1cc22733ba3
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 13#) -}
b91de56e82b10e2821da8ebd0676356f
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
d5a711a800aba4ac66181a3d77867e81
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Tests.hs"#) -}
cd297e60378a23a8d56a5c0f580f41d7
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
55b0922ce91518f8057c3faf0b162710
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
1ff5d3567aa708d5cd3ce0c7f68afc06
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
6908aa05d69faa8711e88cb3084b070c
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldNotBe"#) -}
8944ca27716da0292d6168f937126ccf
  main32 :: GHC.Base.Maybe GHC.Stack.Types.SrcLoc
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main33
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild3 {
                   [] -> GHC.Base.Nothing @ GHC.Stack.Types.SrcLoc
                   : ds ds1
                   -> case ds of wild4 { (,) ds2 loc ->
                      GHC.Base.Just @ GHC.Stack.Types.SrcLoc loc } }) -}
d4c7fb78f81fe8e43a8211e4929b74f1
  main33 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main34) -}
dffc59c6d52460079a7b9e96785ecc93
  main34 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main35) -}
28f03e02f134fec7ed9d51eb4e4db0f2
  main35 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Lang.assertEqual8
                   Test.HUnit.Lang.assertEqual1
                   Main.main36) -}
efe02f7cd1f60db16fa92c3d1bc11a9e
  main36 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Lang.assertEqual13
                   Test.HUnit.Lang.assertFailure1
                   Main.main37) -}
4bb25ee6d034429bc4ac90b86bbf55ff
  main37 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.expectationFailure8
                   Test.Hspec.Expectations.expectationFailure1
                   Main.main38) -}
243d066ac6d56f91f2077b9efd075cc7
  main38 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain16
                   Test.Hspec.Expectations.shouldContain14
                   Main.main39) -}
927b02f7f50e2dfef06647b051010e9e
  main39 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldNotBe2
                   Main.main40) -}
b1054debff8cf10c583b3d59bc401f60
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main169
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main5) -}
570baa8fe2c1c47aaf40d1bbb1e169d7
  main40 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main41
                   GHC.Stack.Types.EmptyCallStack) -}
579154effb84d0cd0e1009a3f7c5d936
  main41 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main43
                   Main.main26
                   Main.main43
                   Main.main42) -}
8bfb4eac5f0a99964393684b9e38c451
  main42 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
c9484babb21463779a4bf4050b9432d5
  main43 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 68#) -}
7fff6b0f865b00d67b97f03a50efbbe0
  main44 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main45
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
8c7b5b44b8daa061ffa6b878efa09105
  main45 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main46) -}
2088666b8e8de76aafe875388038205a
  main46 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main47) -}
9718f0dbe278dc3bd816e2921c019b51
  main47 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main50
                   Main.main48
                   GHC.Stack.Types.EmptyCallStack) -}
4c0344749eb2d174d4e21f2e3b424bbd
  main48 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main49
                   Main.main26
                   Main.main49
                   Main.main42) -}
d2a331ef9584534394246d7781b80b34
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 69#) -}
41250923fa856009358150e35bc4e38d
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main153
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main6) -}
121bde32b38e7060af89209bd6a6745b
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
e69e6b314f1c73eb9da9ad88e12c6d66
  main51 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main52
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
7cd4c49455bdb0a81eb5fc6ce2dba31f
  main52 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main53) -}
b25f921024bcbe127818d83f40cda749
  main53 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main54) -}
afa7c35ac7b4f779687a24e4c1fe3952
  main54 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main55) -}
62447af1f9ea2114cd062a098a5389b4
  main55 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main56) -}
64ad2426325782bb4ac6d68f10d98398
  main56 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main57
                   GHC.Stack.Types.EmptyCallStack) -}
e6cc8c50fe3bc330e30f76cc3357caef
  main57 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main60
                   Main.main59
                   Main.main60
                   Main.main58) -}
360b7b1d7832ef86091d86fb3dd38135
  main58 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
5301e8f3eb4e3b4053c25e5798e84ef6
  main59 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 11#) -}
d2354e774349439fdecdecad7a781e85
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main133
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
ec425d855219372049742378e6af1c06
  main60 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 59#) -}
deb150789a45779e67f924dcc13e008d
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
2c1188d8bd08a4f9f721391907bb599c
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main64
                   Main.main63) -}
cf032f3f84859d2a78a53e9050cc7e4a
  main63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "esetting a robot affects only one robot"#) -}
1cfc03b3d1daec05d9d60d980ee5d97c
  main64 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
ed052468cd8ceeface8ac0989c8ebde4
  main65 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main66
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
29a7ca2143c0a8bf6023a11cca60a0ab
  main66 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main67) -}
12617e5de9d3bc6821db2ec3654beaf9
  main67 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main83
                   Main.main74
                   GHC.Types.False
                   Main.main68
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
ec9495f0f386d4e90d2f2c9391f87c26
  main68 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main69 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
d45ec82160c8993fd119125c6901f587
  main69 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Robot.Robot ds ->
                 case ds
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Robot.$wresetName var# ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Base.String
                        var#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 let {
                   arg :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "not expected: "#
                       (GHC.Show.$fShow[]_$s$cshow1 ipv3)
                 } in
                 case GHC.Classes.$fEq[]_$s$c==1 ipv3 ipv7 of wild2 {
                   GHC.Types.False
                   -> Test.Hspec.Expectations.shouldContain13
                        Main.main70
                          `cast`
                        (Sym (GHC.Classes.N:IP[0]
                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                        arg
                        GHC.Types.True
                        ipv6
                   GHC.Types.True
                   -> Test.Hspec.Expectations.shouldContain13
                        Main.main70
                          `cast`
                        (Sym (GHC.Classes.N:IP[0]
                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                        arg
                        GHC.Types.False
                        ipv6 } } } } } } }) -}
11b5807b7896a1ee17144f852f2bc947
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main116
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
cd5b85cced74f1d797766e740b9ec040
  main70 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldNotBe2
                   Main.main71) -}
ea3a3fe53f071980cb293552f087c079
  main71 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main31
                   Main.main72
                   GHC.Stack.Types.EmptyCallStack) -}
844935a7629ec6321a9d7987e3929db6
  main72 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main73
                   Main.main26
                   Main.main73
                   Main.main25) -}
bd475441cbd1726e46aa0832e2aa910c
  main73 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 57#) -}
43393a3f8fcbfd6503aa407277089f14
  main74 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main75
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
c7ff7434566de7123ed05897ce8ae454
  main75 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main76) -}
b8d8fe4b31b06ac76882bc5c4c43e7fc
  main76 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main77) -}
8f98a7b3553683db43570874c781ac0a
  main77 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main78) -}
cbdd4082da6f3d1bef181fc0cefd296d
  main78 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main79) -}
0dcc14ed6d1d177d54a3f94e542ac802
  main79 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main61
                   Main.main80
                   GHC.Stack.Types.EmptyCallStack) -}
ac502efd7be95cff209ed22e1a91e9b7
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main86
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9) -}
d09e621e02e4669b1ff7755dfc218665
  main80 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main82
                   Main.main59
                   Main.main82
                   Main.main81) -}
08ea6e0cac37d14b62839f3351216e04
  main81 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51#) -}
a2c1f5f8fc77f5e75547656f228c6bec
  main82 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 52#) -}
3fc8c166f36d6aac6aa2deac3e6c227f
  main83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main85
                   Main.main84) -}
3ea3e1420962a72b6b162f117a1c7a29
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ew name is different from old name"#) -}
a481f8638dc9143acaccb0034594a72f
  main85 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'n'#) -}
79dbb780a8198a1c0590cd6ef5a7bda0
  main86 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main87
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))))) -}
a775d305cef8931becb501d48d64a98e
  main87 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg (GHC.Types.IO ())))
                   Main.main88) -}
96c937cab79d40aae96b5026bf072e0e
  main88 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                   Main.main114
                   Main.main105
                   GHC.Types.False
                   Main.main89
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
722474bf858c4d1c5643e9f270f01ae3
  main89 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg (GHC.Types.IO ()))
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ (GHC.Types.IO ())
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main90 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
bb5ef6bedfc889b8edf2ceefe4536061
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main65
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main10
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
26da29839b2a9eb1e107e01ec29c5ea9
  main90 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Robot.mkRobot1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Robot.Robot ww1 ->
                 case ww1
                        `cast`
                      (GHC.IORef.N:IORef[0] <GHC.Base.String>_N) of ww2 { GHC.STRef.STRef ww3 ->
                 case Robot.$wresetName ww3 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 Main.$wtestPersistence ww3 ipv2 } } } }) -}
bcfed34dfecee9a3761e8fd69abfcfcf
  main91 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main92
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
78717308c356158ce426295b6e8fdd1c
  main92 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main93) -}
b19f112e6e36603a5d70adb076cb87fa
  main93 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main94) -}
ab7637eaa0e9f5221aef2ab09e69d2d1
  main94 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main50
                   Main.main95
                   GHC.Stack.Types.EmptyCallStack) -}
f09e36df8398505f21faf3046b943a3d
  main95 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main30
                   Main.main29
                   Main.main28
                   Main.main98
                   Main.main97
                   Main.main98
                   Main.main96) -}
a1aebabada69350effc239f86d3eedb4
  main96 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 33#) -}
978714110ac85923364672cdceacae5a
  main97 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
4442f6bdbd0548884e18fdd591ceae09
  main98 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 30#) -}
75c374c96ad606e61e7c9a5f74b13157
  main99 ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Base.String
                   Main.main100
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1) -}
43cb90b45a8587a805e1002b308344af
  main_matchesPattern :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: [GHC.Types.Char]) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char s 0# of ww2 {
                   DEFAULT -> GHC.Types.False
                   5#
                   -> case s of wild {
                        [] -> GHC.Types.True
                        : y ys
                        -> case y of wild2 { GHC.Types.C# c2 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leChar# 'A'# c2) of wild3 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.leChar# c2 'Z'#) of wild1 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ys of wild5 {
                                       [] -> GHC.Types.True
                                       : y1 ys1
                                       -> case y1 of wild6 { GHC.Types.C# c1 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.leChar# 'A'# c1) of wild7 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.leChar# c1 'Z'#) of wild8 {
                                                 GHC.Types.False -> GHC.Types.False
                                                 GHC.Types.True
                                                 -> case ys1 of wild9 {
                                                      [] -> GHC.Types.True
                                                      : y2 ys2
                                                      -> case y2 of wild10 { GHC.Types.C# c3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.leChar#
                                                                   '0'#
                                                                   c3) of wild11 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.leChar#
                                                                        c3
                                                                        '9'#) of wild12 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ys2 of wild13 {
                                                                     [] -> GHC.Types.True
                                                                     : y3 ys3
                                                                     -> case y3 of wild14 { GHC.Types.C# c4 ->
                                                                        case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.leChar#
                                                                                  '0'#
                                                                                  c4) of wild15 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.leChar#
                                                                                       c4
                                                                                       '9'#) of wild16 {
                                                                               GHC.Types.False
                                                                               -> GHC.Types.False
                                                                               GHC.Types.True
                                                                               -> case ys3 of wild17 {
                                                                                    []
                                                                                    -> GHC.Types.True
                                                                                    : y4 ys4
                                                                                    -> case y4 of wild18 { GHC.Types.C# c5 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.leChar#
                                                                                                 '0'#
                                                                                                 c5) of wild19 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.False
                                                                                         GHC.Types.True
                                                                                         -> GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.leChar#
                                                                                                 c5
                                                                                                 '9'#) } } } } } } } } } } } } } } } } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

