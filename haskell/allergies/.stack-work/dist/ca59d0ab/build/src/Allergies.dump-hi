
==================== FINAL INTERFACE ====================
2017-03-13 13:19:38.9474143 UTC

interface allergies-0.0.0-EHvojrwS4EmEXBNo0v70wQ:Allergies 8002
  interface hash: 4b9df5efe8a59fa1750d23f3032a80c1
  ABI hash: 7ffb54bf1acaebeb8f5c04427cb8e2de
  export-list hash: 6a8a5f1b9ca6969b81edbe3c457b6fd4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 50be09f6ae5701bb586bc6db9bc9ce26
  sig of: Nothing
  used TH splices: False
  where
exports:
  Allergies.allergies
  Allergies.isAllergicTo
  Allergies.Allergen{Allergies.Cats Allergies.Chocolate Allergies.Eggs Allergies.Peanuts Allergies.Pollen Allergies.Shellfish Allergies.Strawberries Allergies.Tomatoes}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Bits 8dd241433f98eab81ddfb7fcb01616f1
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
c0bd03624624e085359e04e823630732
  $fEqAllergen :: GHC.Classes.Eq Allergies.Allergen
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Allergies.Allergen
                  Allergies.$fEqAllergen_$c==
                  Allergies.$fEqAllergen_$c/= -}
c0bd03624624e085359e04e823630732
  $fEqAllergen_$c/= ::
    Allergies.Allergen -> Allergies.Allergen -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Allergies.Allergen)
                   (b :: Allergies.Allergen) ->
                 case a of wild {
                   Allergies.Eggs
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Eggs -> GHC.Types.False }
                   Allergies.Peanuts
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Peanuts -> GHC.Types.False }
                   Allergies.Shellfish
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Shellfish -> GHC.Types.False }
                   Allergies.Strawberries
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Allergies.Strawberries -> GHC.Types.False }
                   Allergies.Tomatoes
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Tomatoes -> GHC.Types.False }
                   Allergies.Chocolate
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Chocolate -> GHC.Types.False }
                   Allergies.Pollen
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Pollen -> GHC.Types.False }
                   Allergies.Cats
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Allergies.Cats -> GHC.Types.False } }) -}
c0bd03624624e085359e04e823630732
  $fEqAllergen_$c== ::
    Allergies.Allergen -> Allergies.Allergen -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Allergies.Allergen)
                   (ds1 :: Allergies.Allergen) ->
                 case ds of wild {
                   Allergies.Eggs
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Eggs -> GHC.Types.True }
                   Allergies.Peanuts
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Peanuts -> GHC.Types.True }
                   Allergies.Shellfish
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Shellfish -> GHC.Types.True }
                   Allergies.Strawberries
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Allergies.Strawberries -> GHC.Types.True }
                   Allergies.Tomatoes
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Tomatoes -> GHC.Types.True }
                   Allergies.Chocolate
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Chocolate -> GHC.Types.True }
                   Allergies.Pollen
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Pollen -> GHC.Types.True }
                   Allergies.Cats
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Allergies.Cats -> GHC.Types.True } }) -}
4b65d375404bf8979ac6db08009d9a34
  $tc'Cats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4320112842710916386##
                   1368348929490492828##
                   Allergies.$trModule
                   Allergies.$tc'Cats1) -}
53c1ff26fbaf255f7722c26f1b7c8355
  $tc'Cats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cats"#) -}
1835a138d0917b1b40d2fbb146f628b4
  $tc'Chocolate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11940784002369384372##
                   7930134882552372703##
                   Allergies.$trModule
                   Allergies.$tc'Chocolate1) -}
15a0632cd8c7566c090a02d600641c33
  $tc'Chocolate1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chocolate"#) -}
9ddaaadaec12601a0f1fa20d08a4dd06
  $tc'Eggs :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16995029645916302601##
                   12169897409371276822##
                   Allergies.$trModule
                   Allergies.$tc'Eggs1) -}
8e070eca3e80302d2276086f13afc07c
  $tc'Eggs1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Eggs"#) -}
19f5e3ffbefae9e87e775c9af899b082
  $tc'Peanuts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12245016620591571013##
                   17455095768246946020##
                   Allergies.$trModule
                   Allergies.$tc'Peanuts1) -}
ef4156620f4dd0540428ea4e3f56ed51
  $tc'Peanuts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Peanuts"#) -}
b80d33de7914a6bf8605bd8301942f8e
  $tc'Pollen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2539978295066503432##
                   5874221971743874537##
                   Allergies.$trModule
                   Allergies.$tc'Pollen1) -}
0b1f4eb802d4a3345b0b1ff93fa2985a
  $tc'Pollen1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pollen"#) -}
9f2fe32ead5edacbe93572abe196d16d
  $tc'Shellfish :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8674277224821822708##
                   7095997220806647140##
                   Allergies.$trModule
                   Allergies.$tc'Shellfish1) -}
a4b9bdf6da347aae80684cdb05223ed5
  $tc'Shellfish1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Shellfish"#) -}
f2f67bcd238ce15e48a12a40285eea20
  $tc'Strawberries :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7393591801058005524##
                   9218079819345075235##
                   Allergies.$trModule
                   Allergies.$tc'Strawberries1) -}
68c87beeac0619595bb47569f2293109
  $tc'Strawberries1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Strawberries"#) -}
38da99583443296b2e530b9ed712ead6
  $tc'Tomatoes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7314953315118865115##
                   14465392594058634651##
                   Allergies.$trModule
                   Allergies.$tc'Tomatoes1) -}
a94fe96336697436c546e01b025009cd
  $tc'Tomatoes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Tomatoes"#) -}
27936f78f9d7252f3ed8b923ba4f3a98
  $tcAllergen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18297951171601392645##
                   16901513544496794782##
                   Allergies.$trModule
                   Allergies.$tcAllergen1) -}
e058cf64e00f9d8f4fba7efce353a76b
  $tcAllergen1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Allergen"#) -}
73d4b451cbc2198912177d30f62cd2bb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Allergies.$trModule2
                   Allergies.$trModule1) -}
0d05b71b4971c516f9dc1604ca3a6378
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Allergies"#) -}
056818cd99816ba8a50ebc0f96009f6c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "allergies-0.0.0-EHvojrwS4EmEXBNo0v70wQ"#) -}
3009d25cd4b412880fb0d79025fe2619
  $wallergies :: GHC.Prim.Int# -> [Allergies.Allergen]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 let {
                   r :: [Allergies.Allergen]
                   = case GHC.Prim.andI# 8# ww of wild {
                       DEFAULT
                       -> GHC.Types.:
                            @ Allergies.Allergen
                            Allergies.Strawberries
                            (case GHC.Prim.andI# 16# ww of wild1 {
                               DEFAULT -> Allergies.allergies1
                               0# -> GHC.Types.[] @ Allergies.Allergen })
                       0#
                       -> case GHC.Prim.andI# 16# ww of wild1 {
                            DEFAULT -> Allergies.allergies1
                            0# -> GHC.Types.[] @ Allergies.Allergen } }
                 } in
                 let {
                   r1 :: [Allergies.Allergen]
                   = case GHC.Prim.andI# 64# ww of wild {
                       DEFAULT
                       -> GHC.Types.:
                            @ Allergies.Allergen
                            Allergies.Pollen
                            (case GHC.Prim.andI# 4# ww of wild1 {
                               DEFAULT -> GHC.Types.: @ Allergies.Allergen Allergies.Shellfish r
                               0# -> r })
                       0#
                       -> case GHC.Prim.andI# 4# ww of wild1 {
                            DEFAULT -> GHC.Types.: @ Allergies.Allergen Allergies.Shellfish r
                            0# -> r } }
                 } in
                 let {
                   r2 :: [Allergies.Allergen]
                   = case GHC.Prim.andI# 1# ww of wild {
                       DEFAULT
                       -> GHC.Types.:
                            @ Allergies.Allergen
                            Allergies.Eggs
                            (case GHC.Prim.andI# 2# ww of wild1 {
                               DEFAULT -> GHC.Types.: @ Allergies.Allergen Allergies.Peanuts r1
                               0# -> r1 })
                       0#
                       -> case GHC.Prim.andI# 2# ww of wild1 {
                            DEFAULT -> GHC.Types.: @ Allergies.Allergen Allergies.Peanuts r1
                            0# -> r1 } }
                 } in
                 case GHC.Prim.andI# 128# ww of wild {
                   DEFAULT
                   -> GHC.Types.:
                        @ Allergies.Allergen
                        Allergies.Cats
                        (case GHC.Prim.andI# 32# ww of wild1 {
                           DEFAULT -> GHC.Types.: @ Allergies.Allergen Allergies.Chocolate r2
                           0# -> r2 })
                   0#
                   -> case GHC.Prim.andI# 32# ww of wild1 {
                        DEFAULT -> GHC.Types.: @ Allergies.Allergen Allergies.Chocolate r2
                        0# -> r2 } }) -}
cb93a072fdb0cbb8e7e849adfe9de8ef
  $wisAllergicTo ::
    Allergies.Allergen -> GHC.Prim.Int# -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Allergies.Allergen) (ww :: GHC.Prim.Int#) ->
                 case w of wild {
                   Allergies.Eggs
                   -> case GHC.Prim.andI# 1# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Peanuts
                   -> case GHC.Prim.andI# 2# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Shellfish
                   -> case GHC.Prim.andI# 4# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Strawberries
                   -> case GHC.Prim.andI# 8# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Tomatoes
                   -> case GHC.Prim.andI# 16# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Chocolate
                   -> case GHC.Prim.andI# 32# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Pollen
                   -> case GHC.Prim.andI# 64# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False }
                   Allergies.Cats
                   -> case GHC.Prim.andI# 128# ww of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } }) -}
c0bd03624624e085359e04e823630732
  data Allergen
    = Eggs
    | Peanuts
    | Shellfish
    | Strawberries
    | Tomatoes
    | Chocolate
    | Pollen
    | Cats
1646f92f24635f753c702f4e4adc868e
  allergies :: GHC.Types.Int -> [Allergies.Allergen]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Allergies.$wallergies ww1 }) -}
bedd76179c2fcaa37301e41f9005c856
  allergies1 :: [Allergies.Allergen]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Allergies.Allergen
                   Allergies.Tomatoes
                   (GHC.Types.[] @ Allergies.Allergen)) -}
1d89cc17ea8600c905865722e0051f49
  isAllergicTo ::
    Allergies.Allergen -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Allergies.Allergen) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Allergies.$wisAllergicTo w ww1 }) -}
instance [safe] GHC.Classes.Eq [Allergies.Allergen]
  = Allergies.$fEqAllergen
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

