
==================== FINAL INTERFACE ====================
2016-12-19 03:14:30.8609567 UTC

interface nucleotide-count-0.0.0-LnIjeFZp0SF6K8oWePf1A:Paths_nucleotide_count 8001
  interface hash: 1eaea30f4565e7553ee19e976ed8bf6f
  ABI hash: e1efe2bb713c9cb9747b33dbd0748b5a
  export-list hash: 74405bdc3f3d78cb934a9df03061c7e0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8e9e04201ca28f987590461cb028d6ff
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_nucleotide_count.getBinDir
  Paths_nucleotide_count.getDataDir
  Paths_nucleotide_count.getDataFileName
  Paths_nucleotide_count.getLibDir
  Paths_nucleotide_count.getLibexecDir
  Paths_nucleotide_count.getSysconfDir
  Paths_nucleotide_count.version
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Control.Exception 8217a8269170a7a872c6de95a3662e12
import  -/  base-4.9.0.0:Control.Exception.Base 0f704105a0b2c9a9a0b50fdf0b35065d
import  -/  base-4.9.0.0:Data.Version 3f0961025ff9f19ae91bee7149ed25cb
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.IO 1429985c1cb03cc0778fa4876799f1d2
import  -/  base-4.9.0.0:GHC.IO.Exception 87b5d724a3c63503d71462ac6ddea52b
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.Environment b460b4a8ded59bf876fca87a5a3550f2
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
addDependentFile "C:\Users\Jun\AppData\Local\Programs\stack\x86_64-windows\ghc-8.0.1\lib\include\ghcversion.h"
addDependentFile ".stack-work\dist\b7fec021\build\autogen\cabal_macros.h"
f81c06eb29f10c53ae101ca75f9f92e0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_nucleotide_count.$trModule2
                   Paths_nucleotide_count.$trModule1) -}
8a6858dc896f0c0bb94bc495dbaf9eb6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Paths_nucleotide_count"#) -}
3b9e817fcb0245b652b96721d9237b16
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "nucleotide-count-0.0.0-LnIjeFZp0SF6K8oWePf1A"#) -}
7a5a98217fea61467bf8a76c8da33ef6
  bindir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "C:\\Users\\Jun\\exercism\\haskell\\nucleotide-count\\.stack-work\\install\\35bf466f\\bin"#) -}
fafa448f89094045f02852b0d1fbb5d4
  datadir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "C:\\Users\\Jun\\exercism\\haskell\\nucleotide-count\\.stack-work\\install\\35bf466f\\share\\x86_64-windows-ghc-8.0.1\\nucleotide-count-0.0.0"#) -}
4a1486943ca11ac2f1a799e4863108c8
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
340982ed86a5503421d2af4c30b62407
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getBinDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getBinDir2
                   eta) -}
cf10d1532da31a764a048f23bfd1a3a2
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.bindir #) } } } } }) -}
29d0335e3045f36ffce7410e55f168ba
  getBinDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getBinDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
1b9bd860e36d45e89e22a37087952d09
  getBinDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getBinDir5) -}
45685634bc00f2617334d4909eed6da7
  getBinDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_bindir"#) -}
801e4a805682ca13635e2a72d40c526c
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
01410999998a4457c460827f38250b86
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getDataDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getDataDir2
                   eta) -}
39a020c538b9d427657b47b7ca0bf098
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.datadir #) } } } } }) -}
eb324c86e5ea52566394a0083412ec54
  getDataDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getDataDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
c5ed90cbe0edbac02864372a70d9bac5
  getDataDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getDataDir5) -}
2910851e4e2d367b2832d3f084289769
  getDataDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_datadir"#) -}
d011835295ea0c77c0e2a9dd4ffbbdb2
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
5c7976d2606885faa328b3978f18ab88
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_nucleotide_count.getDataDir3
                          `cast`
                        (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        Paths_nucleotide_count.getDataDir2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString# "\\"# name) #) }) -}
779874d680d4ccc38a7b17ec2a654e98
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
7b9704c468f2f5a18f1c3e23fd9b3336
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getLibDir2
                   eta) -}
053df52d4ad63aff7c1ceac8d0bc33b8
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.libdir #) } } } } }) -}
0898003d2ae488ef21177b5d2f1abf85
  getLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
6308da0ce4e4949cf1d0eb2aa2665570
  getLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getLibDir5) -}
25b5cfa1f53bd3286dd78e5dc9852543
  getLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_libdir"#) -}
87c44eecb900b12b75d3e0dcf5db1ca4
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
8e406288fb7bd522a4104c9c1984dd5e
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getLibexecDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getLibexecDir2
                   eta) -}
3bd59c2bcf1fcf80e50f0066ec9dd223
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.libexecdir #) } } } } }) -}
50c71655d804d64f441bd77d9896ba29
  getLibexecDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getLibexecDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
a646cbfdca031b2864cd1ab022462a35
  getLibexecDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getLibexecDir5) -}
5bbc4a8f7bc84aa5b4c3ab0a3a84f05d
  getLibexecDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_libexecdir"#) -}
3c2b67a437e8d46bac00efcc27d8adf6
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
8283c56d036f34d6fc4c1faaa4b9b916
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getSysconfDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getSysconfDir2
                   eta) -}
4c5fe5e609faaff18c3545cdfd879546
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.sysconfdir #) } } } } }) -}
16b53c86f724762d9647604d8b95abe8
  getSysconfDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getSysconfDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
5fdca614dc0aa7245554dbeacd80c583
  getSysconfDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getSysconfDir5) -}
f01fa91ad81975e20d50dc0dbfa66083
  getSysconfDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_sysconfdir"#) -}
c07f8f47701096bbf3fbde1bc480911c
  libdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "C:\\Users\\Jun\\exercism\\haskell\\nucleotide-count\\.stack-work\\install\\35bf466f\\lib\\x86_64-windows-ghc-8.0.1\\nucleotide-count-0.0.0-LnIjeFZp0SF6K8oWePf1A"#) -}
0d3e336320a744ea52032803a6997495
  libexecdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "C:\\Users\\Jun\\exercism\\haskell\\nucleotide-count\\.stack-work\\install\\35bf466f\\libexec"#) -}
a0cbf6a3aeb32dbf4a16ff006a482f5b
  sysconfdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "C:\\Users\\Jun\\exercism\\haskell\\nucleotide-count\\.stack-work\\install\\35bf466f\\etc"#) -}
c497972551c66c36f6f62f8c5db7f541
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_nucleotide_count.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
e5bb23f9063ddf4e62a38ae04e6024f9
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_nucleotide_count.version4
                   Paths_nucleotide_count.version2) -}
372ea5cf4aac45615471ca251eb8250d
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_nucleotide_count.version4
                   Paths_nucleotide_count.version3) -}
8a69d61194b0d2dbcdeebfd96e1f8464
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_nucleotide_count.version4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
9908e0a29eef6774de365dff90694375
  version4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

