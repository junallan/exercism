
==================== FINAL INTERFACE ====================
2016-12-05 03:01:15.163937 UTC

interface leap-0.0.0-4uYVmwBGJQhBRFIbJzqiyG:LeapYear 8001
  interface hash: 33591dd06d98451076e4577bab5ebf7f
  ABI hash: 3e58c94926debfd34a3e91feccf657ec
  export-list hash: 8fbaeac34c63d1794af1e533b79bad48
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 01bffee402c99072b66b5a2d29157711
  sig of: Nothing
  used TH splices: False
  where
exports:
  LeapYear.isLeapYear
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Real 011de9ca3282ad24a84e4e15f974f98e
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type bc99d7d6ca3e6f7b722927a29e227674
595ea298b16d685116e7c5cef01f825a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   LeapYear.$trModule2
                   LeapYear.$trModule1) -}
578e735257c01bb523e50da34c8751f5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LeapYear"#) -}
4249775fe050723e8243163f6e906112
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "leap-0.0.0-4uYVmwBGJQhBRFIbJzqiyG"#) -}
8e0abf3f1c9c912f814f2eb31552dac3
  isLeapYear :: GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (yr :: GHC.Integer.Type.Integer) ->
                 let {
                   divisibleBy :: GHC.Integer.Type.Integer -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x :: GHC.Integer.Type.Integer) ->
                     case GHC.Integer.Type.eqInteger#
                            x
                            LeapYear.isLeapYear4 of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False
                       -> case GHC.Integer.Type.eqInteger#
                                 (GHC.Integer.Type.modInteger yr x)
                                 LeapYear.isLeapYear4 of wild2 { DEFAULT ->
                          GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 }
                       GHC.Types.True
                       -> case GHC.Real.divZeroError ret_ty GHC.Types.Bool of {} } }
                 } in
                 case divisibleBy LeapYear.isLeapYear3 of wild {
                   GHC.Types.False -> divisibleBy LeapYear.isLeapYear2
                   GHC.Types.True
                   -> case divisibleBy LeapYear.isLeapYear1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> divisibleBy LeapYear.isLeapYear2 } }) -}
dd5353f1b718821ed5c0b7fd507cc6fe
  isLeapYear1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (100) -}
3b51c86c8cf25118626a4809653cec62
  isLeapYear2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (400) -}
b9b7ca44e19d391147575b5299404a1a
  isLeapYear3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
6df319e683f10574df703dff39f7fefc
  isLeapYear4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

