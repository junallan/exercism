
==================== FINAL INTERFACE ====================
2017-04-15 01:04:25.5847409 UTC

interface pangram-0.0.0-2EqWrVMydFs9qgNXS3ED5A:Pangram 8002
  interface hash: b06e054cbe2c37bd1c7542e536c9efd9
  ABI hash: a37596bf3edb8e545582fc9e907c43e6
  export-list hash: 8a62c5a45c4dcc5bfdb0bcb1915337ff
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 50be09f6ae5701bb586bc6db9bc9ce26
  sig of: Nothing
  used TH splices: False
  where
exports:
  Pangram.isPangram
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char c49b58282af11503cc838e1052cf6b83
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:Data.OldList c9282ee91951bdcbd918d2960562c007
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Unicode 7b64ed854a326c2c5bb224f237ed4a0b
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
2147e4813d713c5e7e84092f1474be01
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Pangram.$trModule2
                   Pangram.$trModule1) -}
2c52e101b666575c7e492a0be9cbbe4b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Pangram"#) -}
7ecd8a14fc8ce339db97172224e82369
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pangram-0.0.0-2EqWrVMydFs9qgNXS3ED5A"#) -}
def1501cea9408db01506783ba82db58
  $wgo :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0] -}
7a992785d4843396f9b1897c7f2d60ae
  isPangram :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (text :: GHC.Base.String) ->
                 case Pangram.isPangram_go
                        (Data.OldList.nubBy @ GHC.Types.Char GHC.Classes.eqChar text)
                        Pangram.isPangram2 of wild { GHC.Types.I# x ->
                 case Pangram.isPangram1 of wild1 { GHC.Types.I# y ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# x y) } }) -}
9f3765bc138358d34d79c8a84cec7615
  isPangram1 :: GHC.Types.Int
  {- Unfolding: (case Pangram.$wgo 97# 0# of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
e08d2d8a058d06181bd1a29bdc71f2e8
  isPangram2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
819e200c2294c61517baec88a613b0c1
  isPangram_go :: [GHC.Types.Char] -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

