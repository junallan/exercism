
==================== FINAL INTERFACE ====================
2017-02-17 04:48:52.3127698 UTC

interface main@main:Main 8001
  interface hash: c481371fcaf62a82fca2e85fd1f2907d
  ABI hash: deba61c68d7a2a05b3b12102067f8b36
  export-list hash: 255fa56246ee67b6f651753cd33f309a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3a52923fc428034d7511b98a07d33776
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      Win32-2.3.1.1@Win32-2.3.1.1
                      anagram-0.0.0@anagram-0.0.0-9N9ZoAsi3SpBMfVuNDyW18
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-DlzOk98pOsTIrg6vAjszFA
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hspec-2.2.4@hspec-2.2.4-9pUiTccnNmQTZyDub5D5c
                      hspec-core-2.2.4@hspec-core-2.2.4-9ACA2FaBPVx3apPeQTo5r3
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-LcnHiP6T48k9K5OKepjQ1q
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.4@hspec-core-2.2.4-9ACA2FaBPVx3apPeQTo5r3:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  anagram-0.0.0@anagram-0.0.0-9N9ZoAsi3SpBMfVuNDyW18:Anagram 98f1ebc3392644359b0b7ecb677ae261
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Exts 8dde1ef8f2283d1c13b06a4e51aded72
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.4@hspec-2.2.4-9pUiTccnNmQTZyDub5D5c:Test.Hspec 8714c53dda61812904156acdd7135f0c
import  -/  hspec-2.2.4@hspec-2.2.4-9pUiTccnNmQTZyDub5D5c:Test.Hspec.Runner 4eab9d6ceb24ace7770397ecc55f75ed
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-9ACA2FaBPVx3apPeQTo5r3:Test.Hspec.Core.Runner 6828b5f45950eb0966e8d0a431ff5059
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-9ACA2FaBPVx3apPeQTo5r3:Test.Hspec.Core.Spec 60b5ae5d40f62264da7f92af86c1fc20
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-9ACA2FaBPVx3apPeQTo5r3:Test.Hspec.Core.Spec.Monad eedad81bacc3b39984a14c6283f974be
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-9ACA2FaBPVx3apPeQTo5r3:Test.Hspec.Options da62ceb5352a97f9b5c3f7bbab375eb0
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations 0e73130bc0a821a48afa4149485fdd75
8e216c2206cb8f7be813d7cecb9e50d3
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2009119047447439236##
                   4000366137966008070##
                   Main.$trModule
                   Main.$tc'Case1) -}
e1f62309fd3518446321a2aa8fd14d0f
  $tc'Case1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Case"#) -}
7a8c19ae5f4b23c19adbbf43e87cde07
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9590744086667149182##
                   6435574634662536949##
                   Main.$trModule
                   Main.$tcCase1) -}
df5f1a54bdbf4a66c08422298b09a82f
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Case"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
2d7b7e2167617a2285d3ce2373b2974e
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> [GHC.Base.String]
    -> [GHC.Base.String]
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 6,
     Strictness: <L,1*U><L,U><L,1*U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [GHC.Base.String])
                   (ww3 :: [GHC.Base.String])
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())[OneShot]
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)
                           (GHC.Types.N:IO[0] <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (case Test.Hspec.Core.Tree.$wspecItem
                                  @ Test.Hspec.Expectations.Expectation
                                  Main.main37
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                  Test.Hspec.Core.Example.$fExampleIO1
                                    `cast`
                                  (Trans
                                       (<Test.Hspec.Expectations.Expectation>_R
                                        ->_R <Test.Hspec.Core.Example.Params>_R
                                        ->_R ((Trans
                                                   (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                             <()>_N))
                                                   (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                               ->_R <GHC.Types.IO ()>_R)
                                              ->_R <GHC.Types.IO ()>_R)
                                        ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Test.Hspec.Core.Example.Result>_R))
                                       (Sym (Test.Hspec.Core.Example.N:Example[0]
                                                 <Test.Hspec.Expectations.Expectation>_N)))
                                  ww
                                  (Test.Hspec.Expectations.shouldMatchList1
                                     @ [GHC.Types.Char]
                                     Main.main29
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                     GHC.Show.$fShow[]_$s$fShow[]1
                                     GHC.Classes.$fEq[]_$s$fEq[]1
                                     (GHC.Base.map
                                        @ [GHC.Types.Char]
                                        @ [GHC.Types.Char]
                                        (GHC.Base.id @ [GHC.Types.Char])
                                        (Anagram.anagramsFor
                                           ww1
                                           (GHC.Base.map
                                              @ [GHC.Types.Char]
                                              @ [GHC.Types.Char]
                                              (GHC.Base.id @ [GHC.Types.Char])
                                              ww2)))
                                     ww3)
                                    `cast`
                                  (Sym (GHC.Types.N:IO[0] <()>_R)) of ww4 { Unit# ww5 ->
                           Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             ww5 })
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
7619d83dedd99c0616438ae82c4d267c
  data Case
    = Case {description :: GHC.Base.String,
            subject :: GHC.Base.String,
            candidates :: [GHC.Base.String],
            expected :: [GHC.Base.String]}
b0a4413c452eded08d22fc30b2998636
  candidates :: Main.Case -> [GHC.Base.String]
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds3 }) -}
036fe6642346ede05e6a9f9bafe02498
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds1 }) -}
9db217208072084442767ce2d9ce5a34
  expected :: Main.Case -> [GHC.Base.String]
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds4 }) -}
a72eb2fa3dcddd8198afa4d8ee05f093
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d978789722f075e85eaca9fcaf3166f1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main153
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
c9c423c0ded7c5d2ff391664e7ea8779
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main105
                   Main.main129
                   Main.main126
                   Main.main122
                   Main.main11
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
21765f4278cb058396484c457e224c72
  main100 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main101
                   (GHC.Types.[] @ GHC.Base.String)) -}
174122d058a13ed9b72ea9eee4d08e3e
  main101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "leading"#) -}
657c743b08bca35614395e49712ab3ae
  main102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clergy"#) -}
2709d0dc63a6d3da77de0856c85dd8a0
  main103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ballerina"#) -}
779776cb4d9f3f90a26fe0b18365f22b
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "allergy"#) -}
147756d9403bd121e4a6d3d72dd50a87
  main105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "detects multiple anagrams"#) -}
419364d53ba3252de31ba76ab6b6c47d
  main106 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main107
                   (GHC.Types.[] @ GHC.Base.String)) -}
cb0c4fb20028689d15ea7d9de57a7e05
  main107 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "inlets"#) -}
b30f9e14b6247dd8dc1d8c95c993d67e
  main108 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main113
                   Main.main109) -}
55755bbde1308b12340b2e4c049d32b5
  main109 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main112
                   Main.main110) -}
733ef4b58496c5d27fa18e7f48a220ac
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main121
                   Main.main120
                   Main.main116
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main12
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
7aaad3622c1bf93eed53a3811c3b35e1
  main110 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main107
                   Main.main111) -}
1e4247310275e12617678cda4e936461
  main111 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main51
                   (GHC.Types.[] @ GHC.Base.String)) -}
e80118ce2a1769ad0eed90c2f65a788a
  main112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "google"#) -}
49e90f285ec2ff85b469c47ecfb57a09
  main113 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "enlists"#) -}
b4417540aef81e41484548d87bc6e851
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "listen"#) -}
5f3c910269f2773ba28b09597943f00f
  main115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "detects anagram"#) -}
7a2213a795fe66ea100d18281d4ca13c
  main116 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main119
                   Main.main117) -}
84238fc6fa4efb7a6122f696a4a2bf1f
  main117 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main118
                   (GHC.Types.[] @ GHC.Base.String)) -}
a3f40a7ca8283b43c9f45409eb544d94
  main118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "goody"#) -}
daddb2996ccb7e180655830b2284a094
  main119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dog"#) -}
35a00e621cca10e6ab21135ce0edbcd9
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main115
                   Main.main114
                   Main.main108
                   Main.main106
                   Main.main13
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
fb5718f4f06d237a4a5d7215c367eef0
  main120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "good"#) -}
a0ee62f4a47db91bea6d5ac37a533065
  main121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "does not detect anagram subsets"#) -}
303cf7d2fda74c554447f71a28268af9
  main122 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main125
                   Main.main123) -}
1e9a2a6ceb484845ed93720d42265c14
  main123 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main124
                   (GHC.Types.[] @ GHC.Base.String)) -}
9c8270561311a2cd0cb5a9cb226e3eca
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "maters"#) -}
4db822def4b8fe9fc67900d32d94b25d
  main125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stream"#) -}
5196d85552040b2bc844a85f4e4d38b2
  main126 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main125
                   Main.main127) -}
681dad378be43a0a99471dcd28729027
  main127 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main128
                   Main.main123) -}
26177ea7f90deee791f78be96efc59bb
  main128 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pigeon"#) -}
1f7769b6753aa2c28fb9978a2c424489
  main129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "master"#) -}
cd88e23421dd31821d801d68c92028af
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main105
                   Main.main104
                   Main.main95
                   Main.main89
                   Main.main14
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
7ee95e046000650579312ddab10b32b3
  main130 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main131
                   (GHC.Types.[] @ GHC.Base.String)) -}
6eaab259c02d8f1f42bd5e74b88274aa
  main131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eagle"#) -}
c5dd05fcf1b42c9696170c6f3a7b6680
  main132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "galea"#) -}
5c4c36df4d60ea29dd462896c070185b
  main133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "does not detect false positives"#) -}
ded75a5ffc43643d7d5299c75a1f1341
  main134 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main135
                   (GHC.Types.[] @ GHC.Base.String)) -}
9dc1cbbc97db8109935bb0eed314e2d4
  main135 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tan"#) -}
e888911b3983072f5aed5ccb94ad04eb
  main136 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main135
                   Main.main137) -}
cd48226bf34153ac34e0a23221318c6a
  main137 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main140
                   Main.main138) -}
43be2d32edea0545fe29194412f884b3
  main138 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main139
                   (GHC.Types.[] @ GHC.Base.String)) -}
c8d3f42f7c34eb1de4af0f10ce22c329
  main139 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "at"#) -}
f4a16003f0b496c001f4a454fd06cb3a
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main88
                   Main.main87
                   Main.main75
                   Main.main73
                   Main.main15
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
ff87d721fe38e7c1528427a9257ca046
  main140 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stand"#) -}
8a66650f70f0898126423ee73ad62a2b
  main141 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ant"#) -}
95f0d07b4042c7f454fedb47e0726c1c
  main142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "detects simple anagram"#) -}
675a6387c2c4ab9a89886628052641a4
  main143 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main150
                   Main.main144) -}
1d9916925eab678f5e88fa91895808c0
  main144 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main149
                   Main.main145) -}
6d6d8a8c690de5f42601ac6d2c453413
  main145 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main148
                   Main.main146) -}
afd14013e1ceecb3725d44f6b6105975
  main146 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main147
                   (GHC.Types.[] @ GHC.Base.String)) -}
9d60641a5caf880862a65346a962b9b0
  main147 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pants"#) -}
8a56ce45d8bbd712a233b07d290a04cc
  main148 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "zombies"#) -}
bd3b8743cc36da4fdc6b06da7c5fea46
  main149 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "world"#) -}
44cf84f5ce2caeed0cbde710d972c87d
  main15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main72
                   Main.main71
                   Main.main69
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main16
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b3b2a74db2cb4abad695381112219391
  main150 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hello"#) -}
8f01ea11c0ad77b45ffdd8e61701f04e
  main151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "diaper"#) -}
e80d46a2cae1be15c2bd4f3e22a1ea7e
  main152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "no matches"#) -}
fdceb47d5b545171f96b542e6d6f3b85
  main153 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
ed5de2665d13ba8307c877a982cb29fa
  main154 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
cf57d6656ffd5711fa2e6bde574de7ae
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main68
                   Main.main66
                   Main.main55
                   Main.main53
                   Main.main17
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
aa2e0c4a2f294b845c34f683f32d0005
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main67
                   Main.main66
                   Main.main64
                   Main.main62
                   Main.main18
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
be4a6b4f42fefb053f50002d2e20514d
  main18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main61
                   Main.main60
                   Main.main55
                   Main.main53
                   Main.main19
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
0289401c1e02451ca99ec5e96ad58829
  main19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main52
                   Main.main51
                   Main.main25
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main20
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
bf6b40d2c3d9feee0a3d5ffa0d16bd9b
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Main.$wc
                        Main.main152
                        Main.main151
                        Main.main143
                        (GHC.Types.[] @ GHC.Base.String)
                        Main.main8
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                       <GHC.Types.IO>_R
                                       <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main6
                          (GHC.Types.:
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             (Test.Hspec.Core.Tree.Node
                                @ (Test.Hspec.Core.Example.ActionWith ())
                                @ (Test.Hspec.Core.Tree.Item ())
                                Main.main3
                                (case ipv1 of wild { (,) ds2 w1 -> w1 }))
                             (GHC.Types.[]
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ())))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) }) -}
930cd9e262bea624eb8f742d099a7186
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main50
                   Main.main49
                   Main.main47
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main21
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
9c080a043daabbcd35b5c5ada21d9e58
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main46
                   Main.main45
                   Main.main43
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main22
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b76ba555b6936412a0f76ecf0c92c9cd
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main28
                   Main.main27
                   Main.main25
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main23
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
7cfcaf1c51c0c9ce3af57e21cd109aca
  main23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main24 #)) -}
3654554d74dddde4cf5f10525c430285
  main24 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
80bd01f9015fbfd5c413ec32e4781790
  main25 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main26
                   (GHC.Types.[] @ GHC.Base.String)) -}
fcb5e81137a9a8c19db1dcdee1935caa
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Banana"#) -}
3c564b4704b6a7ca3b6d873d9c31acf4
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BANANA"#) -}
5f5ecee765cc6e28852d280b8adba404
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "capital word is not own anagram"#) -}
386f40db22f48bcf81c93c7de3c00b48
  main29 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main_fn
                   Main.main30
                   GHC.Stack.Types.EmptyCallStack) -}
f0b059c30ceb6e5a26b720e6e0ae35ff
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main5
                   Main.main4) -}
018286cf04de3316cfa79687eef65662
  main30 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main34
                   Main.main33
                   Main.main32
                   Main.main33
                   Main.main31) -}
5bdd69e8270adf8872191bb15a877c59
  main31 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 75#) -}
5f4656034a787c956c541e9afa6ae7be
  main32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
191f8bf9278fa3acfb591886d9c88c3b
  main33 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
c56ea58d822eafc7df48eb7a14b04259
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Tests.hs"#) -}
cf3323a006f1e7fd9ac684a2728ca82f
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
e819abfb64bc1bf41031856e62ca607a
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
4dacdae4f65056acfe417d05b37f4c55
  main37 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main38) -}
10645f8a2ae0bbb331ec7fab52a06761
  main38 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main42
                   Main.main39
                   GHC.Stack.Types.EmptyCallStack) -}
e2bef1aef81e096fafd3c77e2a333368
  main39 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main34
                   Main.main33
                   Main.main41
                   Main.main33
                   Main.main40) -}
d5aa43cb7ba3576f1bec8a08d143dba5
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nagramsFor"#) -}
f80bcea848d99837cbb2d46d707c0211
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 35#) -}
e8b138064e14e1eda4321d04e68b024a
  main41 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
31acab96e9b18c8a371fa7b21f7ed0af
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
3ae2a4b8c7b598958e966844a2f2ddfc
  main43 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main44
                   (GHC.Types.[] @ GHC.Base.String)) -}
f40a0f91d12a6cdebea3a1ffd77a5665
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "patter"#) -}
5131b2aa0d5c592c238044a299aaaeaf
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tapper"#) -}
67dee6d3b3925ca544c63cf86b4ac446
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "anagrams must use all letters exactly once"#) -}
6a3fc5fe7d9de3f3c8286f787829c4ae
  main47 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main48
                   (GHC.Types.[] @ GHC.Base.String)) -}
ed28977bb305c23cec1e3cc8b78fa792
  main48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "go Go GO"#) -}
f34af949b43e97cc1dd87117fbe28da6
  main49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "go"#) -}
94bbc861f710291bc76ef1d2b3eff2d0
  main5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'a'#) -}
64cd14a5bf58af38a4fa13b71acf55e6
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "does not detect a anagram if the original word is repeated"#) -}
92e67ab2903963904c08ab1f04792d16
  main51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "banana"#) -}
ccdb7239a35e38ad72dc4680f0a750b6
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "does not detect a word as its own anagram"#) -}
9d49c1a17d849b778078916264649196
  main53 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main54
                   (GHC.Types.[] @ GHC.Base.String)) -}
1038cd5d1dab7e3d83ee82af3d87531f
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Carthorse"#) -}
fd4a40e09ca03eaa8393085a01bdce94
  main55 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main59
                   Main.main56) -}
7159b515eeb8fb450488af2d11be60e4
  main56 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main54
                   Main.main57) -}
6baa1c2fc9eca37ae4e20e2ad1ab8682
  main57 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main58
                   (GHC.Types.[] @ GHC.Base.String)) -}
740f0e9fd41d890c991556a5160ef118
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "radishes"#) -}
fa89d35b7bed4618b9232a602c6f4e62
  main59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cashregister"#) -}
b7f704aa81e54c6211306cad5f3b014b
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main5
                   Main.main7) -}
c607e166ae519690c3ba125d4d51c4a2
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "orchestra"#) -}
c70ed12cb656895cdf2691f6dc1aa85e
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "detects anagrams using case-insensitive possible matches"#) -}
cf6ac62046c5d8677a43625ab3d0a728
  main62 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main63
                   (GHC.Types.[] @ GHC.Base.String)) -}
35f153b4691f42701d8dcd1322f2b19a
  main63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "carthorse"#) -}
bc5c58e7981a2fafeba51caed7e77c3f
  main64 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main59
                   Main.main65) -}
3259e3f90a120844c3a620e2ce193655
  main65 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main63
                   Main.main57) -}
5e6d27ce554fde50ffd76cb283cf7e25
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Orchestra"#) -}
b7ae9e1dda733d81f20fcb7e7eca1306
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "detects anagrams using case-insensitive subject"#) -}
f6e67f49ac8371832fef7717db7be67b
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "detects anagrams case-insensitively"#) -}
4885e8c79345608cff540ae92a8fbc74
  main69 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main70
                   (GHC.Types.[] @ GHC.Base.String)) -}
a885f8e9ca7b8342cba5760043e019b1
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nagram"#) -}
caedb1239466f51bd1452c729593544b
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "last"#) -}
d14d460a4d139519c2adf69ea93a75b0
  main71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "mass"#) -}
5089ac46d445ca425f4b536de7675d9a
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "does not detect non-anagrams with identical checksum"#) -}
08df84ecc605946661e325eae2bd9294
  main73 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main74
                   (GHC.Types.[] @ GHC.Base.String)) -}
9ff48296f8a6c9bdcd60672aafc7b29d
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cron"#) -}
acbf4b361e5831ab8c0d896355544451
  main75 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main87
                   Main.main76) -}
e62cd21df7b2583e81fb4adfb5e067e3
  main76 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main86
                   Main.main77) -}
ad09bad7c15bc636b0db6f6d70c730c1
  main77 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main85
                   Main.main78) -}
888252ea8c7fe32e9723dd9c40032db8
  main78 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main84
                   Main.main79) -}
904f8655714ed43e7e34865a30fab06f
  main79 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main83
                   Main.main80) -}
2d6ad7fb0b4f554fb980be7f379ae00f
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main142
                   Main.main141
                   Main.main136
                   Main.main134
                   Main.main9
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
8a2abe398780f03cd4ed8dc30daf0fd0
  main80 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main74
                   Main.main81) -}
ac7140bbd8eb301cd1add28c2bf2b159
  main81 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main82
                   (GHC.Types.[] @ GHC.Base.String)) -}
1c2de4b6172d535639c0ebf3420d9b9e
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "park"#) -}
0fac787d33a3611352173e06a20290d1
  main83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CORN"#) -}
391e28d57ddafa8e446d37d38fb77be9
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rank"#) -}
b13da349cc12829e99e4e1e8830f4075
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Corn"#) -}
b4ba0d814627f73dbd20dc5e07a9f364
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dark"#) -}
7ae702ac8381b1c49cfd60b00985fb03
  main87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "corn"#) -}
acf45053a77eb562c777996589c5b212
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "does not detect identical words"#) -}
58423ea9c8b7141f31429251f3bef8a9
  main89 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main94
                   Main.main90) -}
d42d2183fafbb850639cdec340a510d4
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main133
                   Main.main132
                   Main.main130
                   (GHC.Types.[] @ GHC.Base.String)
                   Main.main10
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
ff77e6d75fdce2d4ec20275549f77299
  main90 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main93
                   Main.main91) -}
a33d891616ddf442035991d9da08b8ab
  main91 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main92
                   (GHC.Types.[] @ GHC.Base.String)) -}
0d8ae8742adcd092333becb4d87d329d
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "largely"#) -}
ec37e8e7b2871cf7443eb217eafc72a5
  main93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "regally"#) -}
207c99ea3729546eda0f73419cc48c8b
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gallery"#) -}
7c6f37a712a8c2b86b7bb26903fcb23d
  main95 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main94
                   Main.main96) -}
ce08c3b0bc65edd68d43dd488b260af4
  main96 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main103
                   Main.main97) -}
8f63b5be29894c380751da497f048787
  main97 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main93
                   Main.main98) -}
7fda7590f5b69f40cc08410fd6e233de
  main98 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main102
                   Main.main99) -}
d2ef511af1da2f8251c4d170b6bbddb7
  main99 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main92
                   Main.main100) -}
b833423801d1fa1e6763dff10335500c
  main_fn :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldMatchList"#) -}
57bafb69b0ec5be803f290c5bd0f6809
  subject :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

