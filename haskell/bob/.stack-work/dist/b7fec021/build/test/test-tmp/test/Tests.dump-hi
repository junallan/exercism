
==================== FINAL INTERFACE ====================
2016-12-08 05:30:55.1941315 UTC

interface main@main:Main 8001
  interface hash: 3a62339deb9e5972c5d3da8903132d86
  ABI hash: 93ec994a514130c363d7a6164801a32c
  export-list hash: b0a5ce1158ee9c9a051e61749b229fbe
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3a52923fc428034d7511b98a07d33776
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.2@HUnit-1.3.1.2-LggooYwT1UPHSoNYWvAdgk
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      Win32-2.3.1.1@Win32-2.3.1.1
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-DlzOk98pOsTIrg6vAjszFA
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf base-4.9.0.0
                      bob-0.0.0@bob-0.0.0-BYvLF0MkBeW5sNhLCN5oPY
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hspec-2.2.4@hspec-2.2.4-2JHkrOy68MoFruTPHbCUnA
                      hspec-core-2.2.4@hspec-core-2.2.4-EKkyFqjPJqS7XEtkjBuz9r
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-LcnHiP6T48k9K5OKepjQ1q
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-FBS8bJQDuy67pt2mrEjbcq:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.4@hspec-core-2.2.4-EKkyFqjPJqS7XEtkjBuz9r:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  bob-0.0.0@bob-0.0.0-BYvLF0MkBeW5sNhLCN5oPY:Bob c157025ecb61008239abba55ae8c4eba
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.4@hspec-2.2.4-2JHkrOy68MoFruTPHbCUnA:Test.Hspec 6f4f87bf3181fc09cdaef39c9770e8cd
import  -/  hspec-2.2.4@hspec-2.2.4-2JHkrOy68MoFruTPHbCUnA:Test.Hspec.Runner 07bd5b8f441fc8d905cac0439b0a7e36
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-EKkyFqjPJqS7XEtkjBuz9r:Test.Hspec.Core.Runner b03bd0dbd7dff15473cadb57650a40e0
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-EKkyFqjPJqS7XEtkjBuz9r:Test.Hspec.Core.Spec 206294133a97b279277f038a12d11187
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-EKkyFqjPJqS7XEtkjBuz9r:Test.Hspec.Core.Spec.Monad 5c22334405380a81c0f8e2fd23a00114
import  -/  hspec-core-2.2.4@hspec-core-2.2.4-EKkyFqjPJqS7XEtkjBuz9r:Test.Hspec.Options 22c5799b663e0255f7882b4902f8f366
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-2hcUzmYSxY99w7X9aRVhtQ:Test.Hspec.Expectations 0e73130bc0a821a48afa4149485fdd75
8e216c2206cb8f7be813d7cecb9e50d3
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2009119047447439236##
                   4000366137966008070##
                   Main.$trModule
                   Main.$tc'Case1) -}
e1f62309fd3518446321a2aa8fd14d0f
  $tc'Case1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Case"#) -}
7a8c19ae5f4b23c19adbbf43e87cde07
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9590744086667149182##
                   6435574634662536949##
                   Main.$trModule
                   Main.$tcCase1) -}
df5f1a54bdbf4a66c08422298b09a82f
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Case"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
0ef0414b2e563806c5e8acce3b6356c6
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())[OneShot]
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)
                           (GHC.Types.N:IO[0] <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (case Test.Hspec.Core.Tree.$wspecItem
                                  @ Test.Hspec.Expectations.Expectation
                                  Main.main47
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                  Test.Hspec.Core.Example.$fExampleIO1
                                    `cast`
                                  (Trans
                                       (<Test.Hspec.Expectations.Expectation>_R
                                        ->_R <Test.Hspec.Core.Example.Params>_R
                                        ->_R ((Trans
                                                   (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                             <()>_N))
                                                   (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                               ->_R <GHC.Types.IO ()>_R)
                                              ->_R <GHC.Types.IO ()>_R)
                                        ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Test.Hspec.Core.Example.Result>_R))
                                       (Sym (Test.Hspec.Core.Example.N:Example[0]
                                                 <Test.Hspec.Expectations.Expectation>_N)))
                                  ww
                                  (Test.Hspec.Expectations.shouldBe1
                                     @ GHC.Base.String
                                     Main.main38
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                     GHC.Show.$fShow[]_$s$fShow[]1
                                     GHC.Classes.$fEq[]_$s$fEq[]1
                                     (Bob.responseFor ww1)
                                     ww2)
                                    `cast`
                                  (Sym (GHC.Types.N:IO[0] <()>_R)) of ww3 { Unit# ww4 ->
                           Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             ww4 })
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
b78f97389f8258ceec566bbc374cc40d
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Base.String,
            expected :: GHC.Base.String}
b3ffdd12148c2d9cea37a32bb0ac2ce9
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
bc1ffbae2b969e01a930af6a25372fd2
  expected :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
547df147235bd178632b314cfaa8dd45
  input :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
fbb4e8788a7e55c51800475f6f579dcd
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c53c11ef1f434d480fe149ccc4e1d590
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main103
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
ff9cbe9499b6671e38c453373a7eb731
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main98
                   Main.main97
                   Main.main74
                   Main.main11
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
122b0d04cf84183075cf05202dc31ed6
  main100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouting"#) -}
2d0ff1e2eab050f70c105a7970c4eb14
  main101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Tom-ay-to, tom-aaaah-to."#) -}
a82ce5d5878adf4ae22cd11b26a927fc
  main102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stating something"#) -}
1498b9e3a2244eacd7d6fd12209234ed
  main103 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
41682b3dac913b50a99bbb71e5b29d74
  main104 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
47acae2329e787cd64943aed171aa6d2
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main96
                   Main.main95
                   Main.main56
                   Main.main12
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
78d50f5c9989d2df3b3215c3fcd612de
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main94
                   Main.main93
                   Main.main56
                   Main.main13
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
e092a89b1f94dd2cb42480dc1dddc746
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main92
                   Main.main91
                   Main.main56
                   Main.main14
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
ffd8525d2eacb22ccdaad6839c107b16
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main90
                   Main.main89
                   Main.main35
                   Main.main15
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
df3a4b6aea265b6075e10a886526fea3
  main15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main88
                   Main.main87
                   Main.main35
                   Main.main16
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
d36e31ad88a31083b5ff91e98db3c11d
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main86
                   Main.main85
                   Main.main74
                   Main.main17
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
73f96276ae07b9f328bab046a9cf5702
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main84
                   Main.main83
                   Main.main74
                   Main.main18
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
75a2dd8103fcfb0541e571663b0a88bb
  main18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main82
                   Main.main81
                   Main.main35
                   Main.main19
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
3bbcd8a0e74b3bb1ba7d13f8604dc5af
  main19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main80
                   Main.main79
                   Main.main56
                   Main.main20
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
5d0c527f0754328dfd8bc30ed988ad06
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Main.$wc
                        Main.main102
                        Main.main101
                        Main.main35
                        Main.main9
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                       <GHC.Types.IO>_R
                                       <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main6
                          (GHC.Types.:
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             (Test.Hspec.Core.Tree.Node
                                @ (Test.Hspec.Core.Example.ActionWith ())
                                @ (Test.Hspec.Core.Tree.Item ())
                                Main.main3
                                (case ipv1 of wild { (,) ds2 w1 -> w1 }))
                             (GHC.Types.[]
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ())))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) }) -}
27c0dde76855cc4b749209b51e2179f3
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main78
                   Main.main77
                   Main.main74
                   Main.main21
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
e56b77ea82fecb9dcb43dc3d1cec6622
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main76
                   Main.main75
                   Main.main74
                   Main.main22
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
ea51437ef399e072e99f0ed1cae626e9
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main73
                   Main.main72
                   Main.main35
                   Main.main23
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
277f1019484ce706b8ecb2d2004f3a84
  main23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main71
                   Main.main70
                   Main.main56
                   Main.main24
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
7792d85d4676a610195f45d64920d80d
  main24 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main69
                   Main.main68
                   Main.main56
                   Main.main25
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b45f3d77462ede96291bed468e8e9858
  main25 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main67
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main53
                   Main.main26
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
d0042818637c4bfb6d7fdb7492cadef2
  main26 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main66
                   Main.main65
                   Main.main53
                   Main.main27
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
211238c4bd1c7adc6ed3ee4522ca8831
  main27 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main64
                   Main.main63
                   Main.main53
                   Main.main28
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
3a9a16f0100617d1a635d97614b4562f
  main28 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main62
                   Main.main61
                   Main.main35
                   Main.main29
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
40e7e0f019f30f33647963a80234f11f
  main29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main60
                   Main.main59
                   Main.main35
                   Main.main30
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
2aad317c9b9e0dc5c55b5392adaa4132
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main5
                   Main.main4) -}
78ae51e0b8f9de8b68cdfd936f6f6a1f
  main30 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main58
                   Main.main57
                   Main.main56
                   Main.main31
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
e68a786b49c9055858823ea3d3a01ab7
  main31 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main55
                   Main.main54
                   Main.main53
                   Main.main32
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
79a0e5bce89730234938cdcba8280157
  main32 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main37
                   Main.main36
                   Main.main35
                   Main.main33
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b34fdde0b756f8f6b10376fc47f1a07f
  main33 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main34 #)) -}
fafdd86e863dd36ba55348e3dc97bda6
  main34 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
02f9c3f67db430cb48ced12ecf4dfba3
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Whatever."#) -}
4a80208004faa0fd0a515b8d9b22c383
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "This is a statement ending with whitespace      "#) -}
522dce8bfff7b8de6c47dee920569e32
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "non-question ending with whitespace"#) -}
5597328d0f8559c30c597b8fefc9b45f
  main38 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main46
                   Main.main39
                   GHC.Stack.Types.EmptyCallStack) -}
29c91942949f6a8e6eff42c65f62d1e0
  main39 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main42
                   Main.main41
                   Main.main42
                   Main.main40) -}
2e5eacb8d7b0bfade757df54f261fdc4
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "esponseFor"#) -}
3c669d47c4c0b0473cf344cf38040662
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 75#) -}
ae0dd49dda86b0ba1122c8072e189e73
  main41 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
3f5dcc592c41c191d3c6c45dd6460b5f
  main42 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
a75625817fb5094b75b4dfbd59991259
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Tests.hs"#) -}
9400e97d10a15c6303f5678c3b22dbf6
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
0e34e3a073259880230dfb01629a7371
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
25ac1706ec22c26f14fbb9f115d2f5e3
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
f49aa09d06cfc991cabb87a929340c12
  main47 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main48) -}
2f32eb465f048267acac3bd42627fc82
  main48 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main52
                   Main.main49
                   GHC.Stack.Types.EmptyCallStack) -}
3387b4ca5cbd8d1109fe8ba87d06a381
  main49 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main42
                   Main.main51
                   Main.main42
                   Main.main50) -}
1b8fbee0fae5aeb0d20e3225a254922e
  main5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
4f9d707cdc99136e96c12c204bb6b800
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 35#) -}
6c0dec35cfb94ed5288fbdbbdb606e5b
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
c847ef6f2dc753f6e8fd24c8cb0afe47
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
97d343a7aeff42fd2cf3442a6f630aa2
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fine. Be that way!"#) -}
f1032e2fd72b4b2ced67c6ef4f5298b4
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \\r \t"#) -}
4b6e5f1062d91301a99c0758a7de0c0d
  main55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "other whitespace"#) -}
e4deeae3dd84e992331086798485fe18
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sure."#) -}
dcd24da7b9a0f6ef64faa0c47d12e78e
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Okay if like my  spacebar  quite a bit?   "#) -}
3a2ecaf7e4b1676759f1ae2e6326dc0b
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ending with whitespace"#) -}
9a36c71896c9a303323a775800a47d1f
  main59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "         hmmmmmmm..."#) -}
b3d5dff7f358e98070ccf77c1fd99f49
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main8
                   Main.main7) -}
69d3c30c9537925b9bf0d2c756b00f3f
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "starting with whitespace"#) -}
c4e0905f3305ecc1ab97e181fedfe084
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Does this cryogenic chamber make me look fat?\n\
                   \no"#) -}
9db87ebd6cde9e4c66b0bf8fdf5ca0d8
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "multiple line question"#) -}
329f391058278b0d77b3b781e4b83c26
  main63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\t\t\t\t\t\t\t\t\t\t"#) -}
283cf904347a0399b16561cd6a4e3e21
  main64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "alternate silence"#) -}
40bccf5f86f99a5524dec277da3eff36
  main65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "          "#) -}
4f45594f8a7699c3241a6f4758790b84
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "prolonged silence"#) -}
850b8048363e6a730ffe1b7916624631
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "silence"#) -}
53de0af1ff2bcd70f754b93df3faa5c1
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Wait! Hang on. Are you going to be OK?"#) -}
5660f2966e6c211c08f382766aa9db4b
  main69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "prattling on"#) -}
eeea6e5a114438d1e7693a0077d7e44b
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ob"#) -}
20d0a52bba62c14a17c5cd76b8a7f3ed
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":) ?"#) -}
9a4ce791fb42db7ed9f0cc53728c0491
  main71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "non-letters with question"#) -}
90a29a322696fc1f28caeeb362d556a2
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Ending with ? means a question."#) -}
a55120613dae9e3d1bcf45b7c3a02217
  main73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "statement containing question mark"#) -}
b230544e4de797f83d502c29630b498b
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Whoa, chill out!"#) -}
e391ead3bf2275bf6d87920c55e62133
  main75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "I HATE YOU"#) -}
e6a9084d1dee9bd4fbc3aacf33f6f57b
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "shouting with no exclamation mark"#) -}
51e99dd6465db0c7acdb0d08a1ffc0f3
  main77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ZOMG THE %^*@#$(*^ ZOMBIES ARE COMING!!11!!1!"#) -}
b71b4db92bd435343f5259add7e83679
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "shouting with special characters"#) -}
1cf15f5ca12172a76c8d37c044537476
  main79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "4?"#) -}
991c2788c2d1fa6673c247846460b3a3
  main8 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'b'#) -}
bbbce1229293ff92fcf6bc3c5df3b758
  main80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "question with only numbers"#) -}
82acf5704d47d04a90dfff099520f4a2
  main81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1, 2, 3"#) -}
55a592d9c73eb47ecec825fdd39013fd
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "only numbers"#) -}
5e9575d2f95b8e795f0cf221de7a86a5
  main83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1, 2, 3 GO!"#) -}
93047d6b31c988fba7f96a9be92bf01c
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouting numbers"#) -}
baf2222c6fce5f265f5cec376b0539a2
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "WHAT THE HELL WERE YOU THINKING?"#) -}
db70949748914f91499d7af13913b648
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "forceful question"#) -}
9f2c1c7638d90565c9ea88e024a936d3
  main87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "It's OK if you don't want to go to the DMV."#) -}
3295dae26b42688dc6164e993f564dda
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "using acronyms in regular speech"#) -}
c1c7b7c03ad4573210c2c793781f690e
  main89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Let's go make out behind the gym!"#) -}
1d625636d71f4d2b1d943ac9c0d47208
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main100
                   Main.main99
                   Main.main74
                   Main.main10
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
f468555abd56f25ad942307ce4664d7d
  main90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "talking forcefully"#) -}
e4570dc42a0fbea83132921d9f885010
  main91 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fffbbcbeab?"#) -}
17822f72db0e18012a2cc3c51d817f28
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asking gibberish"#) -}
73dbee2bbc6b6000f86f77c34fec710e
  main93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "You are, what, like 15?"#) -}
28eea36e516a4c07bcf56fee85bbcd2a
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "asking a numeric question"#) -}
6d988ca68528823d25eefb3dcd4fd2f0
  main95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Does this cryogenic chamber make me look fat?"#) -}
57d5e8ebeaeb53180cb9221421799bdf
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asking a question"#) -}
64c13da902ef0864507c6183a75718ba
  main97 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FCECDFCAAB"#) -}
3670b12047e9e8286a373086ff49f710
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouting gibberish"#) -}
e2bae8b03aa55731d627da790dd82784
  main99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WATCH OUT!"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

