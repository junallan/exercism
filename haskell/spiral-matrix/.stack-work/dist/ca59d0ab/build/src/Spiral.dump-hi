
==================== FINAL INTERFACE ====================
2017-07-23 18:53:26.7196132 UTC

interface spiral-matrix-1.0.0.1-5eYhV6k3Z3i7W1iANTGoYH:Spiral 8002
  interface hash: 6b04d3fbb09e69b87ce3164d02644a5f
  ABI hash: 57cbdb02ca84e86486527297f0b60a28
  export-list hash: 45e9375aad4b4bd77056e6bbe92a2a73
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 50be09f6ae5701bb586bc6db9bc9ce26
  sig of: Nothing
  used TH splices: False
  where
exports:
  Spiral.spiral
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split c60198a427bfd51d9fb4562c059ec1d2
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split.Internals 84db683b1ee25db1d6015fdde5c02e7c
14a897d99977ed77a9c998f46598764f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Spiral.$trModule2
                   Spiral.$trModule1) -}
bffc99e4408862fdbfef9df1e9d1aba5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Spiral"#) -}
a1f9f02231c89ba1ff90cfea1a8a8321
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "spiral-matrix-1.0.0.1-5eYhV6k3Z3i7W1iANTGoYH"#) -}
9ff2fe01b76be8cda4c8e6f61d4a8800
  $wspiral :: GHC.Prim.Int# -> [[GHC.Types.Int]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 let {
                   y :: GHC.Prim.Int# = GHC.Prim.-# ww 1#
                 } in
                 let {
                   wild :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# y) of wild1 {
                   GHC.Types.False
                   -> let {
                        lvl :: [GHC.Types.Int] = GHC.Enum.eftInt 0# y
                      } in
                      letrec {
                        go :: GHC.Prim.Int# -> [GHC.Types.Int]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Prim.Int#) ->
                          let {
                            z :: [GHC.Types.Int]
                            = case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# x y) of wild2 {
                                GHC.Types.False -> go (GHC.Prim.+# x 1#)
                                GHC.Types.True -> GHC.Types.[] @ GHC.Types.Int }
                          } in
                          letrec {
                            go1 :: [GHC.Types.Int] -> [GHC.Types.Int]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds :: [GHC.Types.Int]) ->
                              case ds of wild2 {
                                [] -> z
                                : y1 ys
                                -> GHC.Types.:
                                     @ GHC.Types.Int
                                     (case y1 of ww1 { GHC.Types.I# ww2 ->
                                      case Spiral.$wspiralPosVal x ww2 wild of ww3 { DEFAULT ->
                                      GHC.Types.I# ww3 } })
                                     (go1 ys) }
                          } in
                          go1 lvl
                      } in
                      Data.List.Split.Internals.chunksOf @ GHC.Types.Int wild (go 0#)
                   GHC.Types.True
                   -> Data.List.Split.Internals.chunksOf
                        @ GHC.Types.Int
                        wild
                        (GHC.Types.[] @ GHC.Types.Int) }) -}
1ac47c328fbc2a601a936ef03b48ffc6
  $wspiralPosVal ::
    GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.Int -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><L,1*U(U)>,
     Inline: [0] -}
cdbcc962b01a8f97e7b0187b9d70e9cc
  spiral :: GHC.Types.Int -> [[GHC.Types.Int]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Spiral.$wspiral ww1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

