
==================== FINAL INTERFACE ====================
2017-09-27 14:12:08.4994355 UTC

interface collatz-conjecture-1.1.1.1-4Q7m0FsPMUFufUXTepMSJ:CollatzConjecture 8002
  interface hash: 363957a4cdfa2207709c60a1db95ae9e
  ABI hash: 0d29278c3fa17f1b59756c1f9a0600f1
  export-list hash: 011a703422529144ae01f1a6196accab
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 50be09f6ae5701bb586bc6db9bc9ce26
  sig of: Nothing
  used TH splices: False
  where
exports:
  CollatzConjecture.collatz
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 5e60b761569ee353529e98a36b72df11
0306599d137920aac5482cf5b4adb1c5
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
b4413f64b6dadc393b554eeac5898460
  $seven2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
0aa1c7cc805e6e3cd396fa70b9ecde76
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   CollatzConjecture.$trModule2
                   CollatzConjecture.$trModule1) -}
80a7ce10cedbf0953c5f2aee9dccaa03
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CollatzConjecture"#) -}
7742dfa7151ed13448f639bc43d5c29e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "collatz-conjecture-1.1.1.1-4Q7m0FsPMUFufUXTepMSJ"#) -}
54678da2a1d342b7c298dd50c88e13d1
  $wcollatzValues ::
    GHC.Integer.Type.Integer
    -> (# GHC.Integer.Type.Integer, [GHC.Integer.Type.Integer] #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
5aeca49423fc83e70f7f35103f467960
  collatz ::
    GHC.Integer.Type.Integer -> GHC.Base.Maybe GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger#
                        ds
                        CollatzConjecture.collatz2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.gtInteger#
                             ds
                             CollatzConjecture.collatz2 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False -> GHC.Base.Nothing @ GHC.Integer.Type.Integer
                        GHC.Types.True
                        -> GHC.Base.Just
                             @ GHC.Integer.Type.Integer
                             (case GHC.List.$wlenAcc
                                     @ GHC.Integer.Type.Integer
                                     (CollatzConjecture.collatzValues ds)
                                     0# of ww2 { DEFAULT ->
                              GHC.Integer.Type.smallInteger (GHC.Prim.-# ww2 1#) }) } }
                   GHC.Types.True -> CollatzConjecture.collatz1 } }) -}
b2d079ec10c96bb861ece5a280b15e66
  collatz1 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   CollatzConjecture.$seven1) -}
6feeeea770a97edaaddb20ce0563e852
  collatz2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
d32f0094399c4942bbf42bdffe798f0a
  collatzValues ::
    GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Integer.Type.Integer) ->
                 case CollatzConjecture.$wcollatzValues w of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ GHC.Integer.Type.Integer ww1 ww2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

