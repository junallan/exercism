
==================== FINAL INTERFACE ====================
2017-03-18 22:22:35.6781012 UTC

interface largest-series-product-0.0.0-8dkPcGmrMdTDomXKsLc2wM:Series 8002
  interface hash: 9ed9cf949a485cd40bde117054bb0203
  ABI hash: 3860c3892943e624bab02590bd7f3284
  export-list hash: 92908604f52d7a2ff2d4a0bae16c6ff2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 50be09f6ae5701bb586bc6db9bc9ce26
  sig of: Nothing
  used TH splices: False
  where
exports:
  Series.largestProduct
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR*
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
import  -/  base-4.9.1.0:Data.Char c49b58282af11503cc838e1052cf6b83
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.String 8a39929a33cd7a89c372ce2fbb5db4b0
import  -/  base-4.9.1.0:Data.Tuple b07f695e7ce8fe20cc8a32abf62f60ec
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 5e60b761569ee353529e98a36b72df11
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 35f976519564888082d42815342d42ed
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal 43a9166170aaf8c9b180c2d3ce2cfa3c
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show 638a81be9b7b5c261b714430eaada4e0
8a3ad1c4afc90a5bc4b4c6001df829a2
  $smaximum1 :: (GHC.Types.Int, GHC.Base.String)
  {- Strictness: x -}
c99137a0244adc94a4e1bb3860f8ea56
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Series.$trModule2
                   Series.$trModule1) -}
ee97fa2c1b49e6ad5fe96076d4b9bc9b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Series"#) -}
5ad7c94f1ff1b526497ed94ca59a0541
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "largest-series-product-0.0.0-8dkPcGmrMdTDomXKsLc2wM"#) -}
4dbb616cdc53e6aa7027929c01330f17
  $wgo ::
    [(GHC.Types.Int, GHC.Base.String)]
    -> GHC.Types.Int
    -> GHC.Base.String
    -> (# GHC.Types.Int, GHC.Base.String #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U)><L,U>,
     Inline: [0] -}
fcbfe4fdbbec3cef629385e20496b345
  $wgo1 :: [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
3a5912c02b71cb7a95df0a9c0e17534a
  $wlargestProduct ::
    GHC.Prim.Int#
    -> GHC.Base.String -> GHC.Base.Maybe GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: GHC.Base.String) ->
                 case ww of ds {
                   DEFAULT
                   -> case w of wild {
                        [] -> GHC.Base.Nothing @ GHC.Integer.Type.Integer
                        : ipv ipv1
                        -> case GHC.List.$wlenAcc
                                  @ GHC.Types.Char
                                  wild
                                  0# of ww2 { DEFAULT ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# ww2 ds) of wild1 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# ds 0#) of wild2 {
                                  GHC.Types.False
                                  -> case Series.$wgo1 wild 0# of ww1 {
                                       DEFAULT -> GHC.Base.Nothing @ GHC.Integer.Type.Integer
                                       0#
                                       -> GHC.Base.Just
                                            @ GHC.Integer.Type.Integer
                                            (let {
                                               wild3 :: GHC.Types.Int = GHC.Types.I# ds
                                             } in
                                             case GHC.Base.map
                                                    @ [GHC.Types.Char]
                                                    @ (GHC.Types.Int, GHC.Base.String)
                                                    Series.largestProduct3
                                                    (Series.getAllSubstrings
                                                       wild3
                                                       wild
                                                       wild3) of wild4 {
                                               []
                                               -> case Series.$smaximum1
                                                  ret_ty GHC.Integer.Type.Integer
                                                  of {}
                                               : ipv2 ipv3
                                               -> case ipv2 of ww3 { (,) ww4 ww5 ->
                                                  case Series.$wgo
                                                         ipv3
                                                         ww4
                                                         ww5 of ww6 { (#,#) ww7 ww8 ->
                                                  case ww7 of wild5 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } }) }
                                  GHC.Types.True -> GHC.Base.Nothing @ GHC.Integer.Type.Integer }
                             GHC.Types.True -> GHC.Base.Nothing @ GHC.Integer.Type.Integer } } }
                   0# -> Series.largestProduct1 }) -}
65b82b4f8383b98ceeaad623eaccdbff
  $wseriesProduct :: GHC.Base.String -> GHC.Prim.Int#
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
437c818502e8f098a0e28e95e0aa4e45
  getAllSubstrings ::
    GHC.Types.Int
    -> GHC.Base.String -> GHC.Types.Int -> [GHC.Base.String]
  {- Arity: 3, Strictness: <L,U(U)><S,1*U><L,1*U(1*U)> -}
1dda4ba6f6ab4fc379290b06ec5edc82
  largestProduct ::
    GHC.Types.Int
    -> GHC.Base.String -> GHC.Base.Maybe GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Series.$wlargestProduct ww1 w1 }) -}
8c27c4c19f5af983fe405c30b9aeab39
  largestProduct1 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Series.largestProduct2) -}
8181354b3beb138a3796b1ba30608b89
  largestProduct2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
c04a2243a4c4506543e351bbdb04da62
  largestProduct3 ::
    GHC.Base.String -> (GHC.Types.Int, GHC.Base.String)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) -> (Series.seriesProduct x, x)) -}
4b326339b24f46c3a1a0b8f6cc743a81
  seriesProduct :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case Series.$wseriesProduct w of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

